// Generated by CoffeeScript 1.9.3
(function() {
  var computePunching, main;

  computePunching = function() {
    var ad, asx, asy, b, beta, cClass, dsit, dsw, dx, dy, h, lambdaU, lx, ly, sClass, sect, support, ved;
    cClass = $('#id_c_class').val();
    sClass = $('#id_s_class').val();
    dsw = $('#id_dsw').val();
    support = $('#id_support').val();
    sect = $('#id_sect').val();
    b = $('#id_b').val();
    h = $('#id_h').val();
    dx = $('#id_dx').val();
    dy = $('#id_dy').val();
    lx = $('#id_lx').val();
    ly = $('#id_ly').val();
    ad = $('#id_ad').val();
    lambdaU = $('#id_lambda_u').val();
    asx = $('#id_asx').val();
    asy = $('#id_asy').val();
    dsit = $('#id_dsit').val();
    ved = $('#id_ved').val();
    beta = $('#id_beta').val();
    return $.ajax({
      url: "/api/compute_punching",
      dataType: "json",
      type: "POST",
      data: {
        c_class: cClass,
        s_class: sClass,
        dsw: dsw,
        support: support,
        sect: sect,
        b: b,
        h: h,
        dx: dx,
        dy: dy,
        lx: lx,
        ly: ly,
        ad: ad,
        lambda_u: lambdaU,
        asx: asx,
        asy: asy,
        dsit: dsit,
        ved: ved,
        beta: beta,
        csrfmiddlewaretoken: $.cookie('csrftoken')
      },
      success: function(data, textStatus, jqXHR) {
        var $punchingError, $vrdc, $vrdmax, error, i, len, ref, results;
        $punchingError = $('.js-compute-punching-error');
        $punchingError.html('');
        $vrdc = $('.js-vrdc');
        $vrdmax = $('.js-vrdmax');
        $vrdc.val('');
        $vrdmax.val('');
        if (data.success === true) {
          $vrdc.val(data.vrdc);
          $vrdmax.val(data.vrdmax);
          console.log('Hura');
        }
        if (data.success === false) {
          console.log('Buuuuuu');
          if (data.punching_errors) {
            ref = data.punching_errors;
            results = [];
            for (i = 0, len = ref.length; i < len; i++) {
              error = ref[i];
              results.push($punchingError.append(error));
            }
            return results;
          }
        }
      },
      error: function(jqXHR, textStatus, errorThrown) {
        return $('.js-compute-punching-error').html("Wystąpił nieoczekiwany błąd o kodzie " + jqXHR.status);
      }
    });
  };

  main = function() {
    return $('.js-compute-punching').click(function(ev) {
      return computePunching();
    });
  };

  $(function() {
    return main();
  });

}).call(this);
